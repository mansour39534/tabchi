redis = (loadfile "redis.lua")()
redis = redis.connect('127.0.0.1', 6379)

function dl_cb(arg, data)
end
function get_admin ()
	if redis:get('botBOT-IDadminset') then
		return true
	else
   		print("\n\27[32m  ·«“„Â ò«—ò—œ ’ÕÌÕ ° ›—«„Ì‰ Ê «„Ê—«  „œÌ—Ì Ì —»«   »·Ì€ ê— <<\n                     ⁄—Ì› ò«—»—Ì »Â ⁄‰Ê«‰ „œÌ— «” \n\27[34m                   «ÌœÌ ŒÊœ —« »Â ⁄‰Ê«‰ „œÌ— Ê«—œ ò‰Ìœ\n\27[32m    ‘„« „Ì  Ê«‰Ìœ «“ —»«  “Ì— ‘‰«”Â ⁄œœÌ ŒÊœ —« »œ”  «Ê—Ìœ\n\27[34m        —»« :       @id_ProBot")
    		print("\n\27[32m >> Tabchi Bot need a fullaccess user (ADMIN)\n\27[34m Imput Your ID as the ADMIN\n\27[32m You can get your ID of this bot\n\27[34m                 @id_ProBot")
    		print("\n\27[36m                      : ‘‰«”Â ⁄œœÌ «œ„Ì‰ —« Ê«—œ ò‰Ìœ << \n >> Imput the Admin ID :\n\27[31m                 ")
    		admin=io.read()
		redis:del("botBOT-IDadmin")
    		redis:sadd("botBOT-IDadmin", admin)
		redis:set('botBOT-IDadminset',true)
  	end
  	return print("\n\27[36m     ADMIN ID |\27[32m ".. admin .." \27[36m| ‘‰«”Â «œ„Ì‰")
end
function get_bot (i, naji)
	function bot_info (i, naji)
		redis:set("botBOT-IDid",naji.id_)
		if naji.first_name_ then
			redis:set("botBOT-IDfname",naji.first_name_)
		end
		if naji.last_name_ then
			redis:set("botBOT-IDlanme",naji.last_name_)
		end
		redis:set("botBOT-IDnum",naji.phone_number_)
		return naji.id_
	end
	tdcli_function ({ID = "GetMe",}, bot_info, nil)
end
function reload(chat_id,msg_id)
	loadfile("./bot-BOT-ID.lua")()
	send(chat_id, msg_id, "<i>»« „Ê›ﬁÌ  «‰Ã«„ ‘œ.</i>")
end
function is_naji(msg)
    local var = false
	local hash = 'botBOT-IDadmin'
	local user = msg.sender_user_id_
    local Naji = redis:sismember(hash, user)
	if Naji then
		var = true
	end
	return var
end
function writefile(filename, input)
	local file = io.open(filename, "w")
	file:write(input)
	file:flush()
	file:close()
	return true
end
function process_join(i, naji)
	if naji.code_ == 429 then
		local message = tostring(naji.message_)
		local Time = message:match('%d+')
		redis:setex("botBOT-IDmaxjoin", tonumber(Time), true)
	else
		redis:srem("botBOT-IDgoodlinks", i.link)
		redis:sadd("botBOT-IDsavedlinks", i.link)
	end
end
function process_link(i, naji)
	if (naji.is_group_ or naji.is_supergroup_channel_) then
		redis:srem("botBOT-IDwaitelinks", i.link)
		redis:sadd("botBOT-IDgoodlinks", i.link)
	elseif naji.code_ == 429 then
		local message = tostring(naji.message_)
		local Time = message:match('%d+')
		redis:setex("botBOT-IDmaxlink", tonumber(Time), true)
	else
		redis:srem("botBOT-IDwaitelinks", i.link)
	end
end
function add(id)
	local Id = tostring(id)
	if not redis:sismember("botBOT-IDall", id) then
		if Id:match("^(%d+)$") then
			redis:sadd("botBOT-IDusers", id)
			redis:sadd("botBOT-IDall", id)
		elseif Id:match("^-100") then
			redis:sadd("botBOT-IDsupergroups", id)
			redis:sadd("botBOT-IDall", id)
		else
			redis:sadd("botBOT-IDgroups", id)
			redis:sadd("botBOT-IDall", id)
		end
	end
	return true
end
function rem(id)
	local Id = tostring(id)
	if redis:sismember("botBOT-IDall", id) then
		if Id:match("^(%d+)$") then
			redis:srem("botBOT-IDusers", id)
			redis:srem("botBOT-IDall", id)
		elseif Id:match("^-100") then
			redis:srem("botBOT-IDsupergroups", id)
			redis:srem("botBOT-IDall", id)
		else
			redis:srem("botBOT-IDgroups", id)
			redis:srem("botBOT-IDall", id)
		end
	end
	return true
end
function send(chat_id, msg_id, text)
	tdcli_function ({
		ID = "SendMessage",
		chat_id_ = chat_id,
		reply_to_message_id_ = msg_id,
		disable_notification_ = 1,
		from_background_ = 1,
		reply_markup_ = nil,
		input_message_content_ = {
			ID = "InputMessageText",
			text_ = text,
			disable_web_page_preview_ = 1,
			clear_draft_ = 0,
			entities_ = {},
			parse_mode_ = {ID = "TextParseModeHTML"},
		},
	}, dl_cb, nil)
end
get_admin()
function tdcli_update_callback(data)
	if data.ID == "UpdateNewMessage" then
		if not redis:get("botBOT-IDmaxlink") then
			if redis:scard("botBOT-IDwaitelinks") ~= 0 then
				local links = redis:smembers("botBOT-IDwaitelinks")
				for x,y in pairs(links) do
					if x == 11 then redis:setex("botBOT-IDmaxlink", 60, true) return end
					tdcli_function({ID = "CheckChatInviteLink",invite_link_ = y},process_link, {link=y})
				end
			end
		end
		if not redis:get("botBOT-IDmaxjoin") then
			if redis:scard("botBOT-IDgoodlinks") ~= 0 then 
				local links = redis:smembers("botBOT-IDgoodlinks")
				for x,y in pairs(links) do
					tdcli_function({ID = "ImportChatInviteLink",invite_link_ = y},process_join, {link=y})
					if x == 5 then redis:setex("botBOT-IDmaxjoin", 60, true) return end
				end
			end
		end
		local msg = data.message_
		local bot_id = redis:get("botBOT-IDid") or get_bot()
		if (msg.sender_user_id_ == 777000 or msg.sender_user_id_ == 178220800) then
			for k,v in pairs(redis:smembers('botBOT-IDadmin')) do
				tdcli_function({
					ID = "ForwardMessages",
					chat_id_ = v,
					from_chat_id_ = msg.chat_id_,
					message_ids_ = {[0] = msg.id_},
					disable_notification_ = 0,
					from_background_ = 1
				}, dl_cb, nil)
			end
		end
		if tostring(msg.chat_id_):match("^(%d+)") then
			if not redis:sismember("botBOT-IDall", msg.chat_id_) then
				redis:sadd("botBOT-IDusers", msg.chat_id_)
				redis:sadd("botBOT-IDall", msg.chat_id_)
			end
		end
		add(msg.chat_id_)
		if msg.date_ < os.time() - 150 then
			return false
		end
		if msg.content_.ID == "MessageText" then
			local text = msg.content_.text_
			local matches
			find_link(text)
			if is_naji(msg) then
				if text:match("^(«›“Êœ‰ „œÌ—) (%d+)$") then
					local matches = text:match("%d+")
					if redis:sismember('botBOT-IDadmin', matches) then
						return send(msg.chat_id_, msg.id_, "<i>ò«—»— „Ê—œ ‰Ÿ— œ— Õ«· Õ«÷— „œÌ— «” .</i>")
					elseif redis:sismember('botBOT-IDmod', msg.sender_user_id_) then
						return send(msg.chat_id_, msg.id_, "‘„« œ” —”Ì ‰œ«—Ìœ.")
					else
						redis:sadd('botBOT-IDadmin', matches)
						redis:sadd('botBOT-IDmod', matches)
						return send(msg.chat_id_, msg.id_, "<i>„ﬁ«„ ò«—»— »Â „œÌ— «— ﬁ« Ì«› </i>")
					end
				elseif text:match("^(«›“Êœ‰ „œÌ—ò·) (%d+)$") then
					local matches = text:match("%d+")
					if redis:sismember('botBOT-IDmod',msg.sender_user_id_) then
						return send(msg.chat_id_, msg.id_, "‘„« œ” —”Ì ‰œ«—Ìœ.")
					end
					if redis:sismember('botBOT-IDmod', matches) then
						redis:srem("botBOT-IDmod",matches)
						redis:sadd('botBOT-IDadmin'..tostring(matches),msg.sender_user_id_)
						return send(msg.chat_id_, msg.id_, "„ﬁ«„ ò«—»— »Â „œÌ—Ì  ò· «— ﬁ« Ì«›  .")
					elseif redis:sismember('botBOT-IDadmin',matches) then
						return send(msg.chat_id_, msg.id_, 'œ—Õ«· Õ«÷— „œÌ— Â” ‰œ.')
					else
						redis:sadd('botBOT-IDadmin', matches)
						redis:sadd('botBOT-IDadmin'..tostring(matches),msg.sender_user_id_)
						return send(msg.chat_id_, msg.id_, "ò«—»— »Â „ﬁ«„ „œÌ—ò· „‰’Ê» ‘œ.")
					end
				elseif text:match("^(Õ–› „œÌ—) (%d+)$") then
					local matches = text:match("%d+")
					if redis:sismember('botBOT-IDmod', msg.sender_user_id_) then
						if tonumber(matches) == msg.sender_user_id_ then
								redis:srem('botBOT-IDadmin', msg.sender_user_id_)
								redis:srem('botBOT-IDmod', msg.sender_user_id_)
							return send(msg.chat_id_, msg.id_, "‘„« œÌê— „œÌ— ‰Ì” Ìœ.")
						end
						return send(msg.chat_id_, msg.id_, "‘„« œ” —”Ì ‰œ«—Ìœ.")
					end
					if redis:sismember('botBOT-IDadmin', matches) then
						if  redis:sismember('botBOT-IDadmin'..msg.sender_user_id_ ,matches) then
							return send(msg.chat_id_, msg.id_, "‘„« ‰„Ì  Ê«‰Ìœ „œÌ—Ì òÂ »Â ‘„« „ﬁ«„ œ«œÂ —« ⁄“· ò‰Ìœ.")
						end
						redis:srem('botBOT-IDadmin', matches)
						redis:srem('botBOT-IDmod', matches)
						return send(msg.chat_id_, msg.id_, "ò«—»— «“ „ﬁ«„ „œÌ—Ì  Œ·⁄ ‘œ.")
					end
					return send(msg.chat_id_, msg.id_, "ò«—»— „Ê—œ ‰Ÿ— „œÌ— ‰„Ì »«‘œ.")
				elseif text:match("^( «“Â ”«“Ì —»« )$") then
					get_bot()
					return send(msg.chat_id_, msg.id_, "<i>„‘Œ’«  ›—œÌ —»«  »—Ê“ ‘œ.</i>")
				elseif text:match("—ÌÅÊ— ") then
					tdcli_function ({
						ID = "SendBotStartMessage",
						bot_user_id_ = 178220800,
						chat_id_ = 178220800,
						parameter_ = 'start'
					}, dl_cb, nil)
				elseif text:match("^(/reload)$") then
					return reload(msg.chat_id_,msg.id_)
				elseif text:match("^»—Ê“—”«‰Ì —»« $") then
					io.popen("git fetch --all && git reset --hard origin/persian && git pull origin persian && chmod +x bot"):read("*all")
					local text,ok = io.open("bot.lua",'r'):read('*a'):gsub("BOT%-ID",BOT-ID)
					io.open("bot-BOT-ID.lua",'w'):write(text):close()
					return reload(msg.chat_id_,msg.id_)
				elseif text:match("^Â„ê«„ ”«“Ì »«  »çÌ$") then
					local botid = BOT-ID - 1
					redis:sunionstore("botBOT-IDall","tabchi:"..tostring(botid)..":all")
					redis:sunionstore("botBOT-IDusers","tabchi:"..tostring(botid)..":pvis")
					redis:sunionstore("botBOT-IDgroups","tabchi:"..tostring(botid)..":groups")
					redis:sunionstore("botBOT-IDsupergroups","tabchi:"..tostring(botid)..":channels")
					redis:sunionstore("botBOT-IDsavedlinks","tabchi:"..tostring(botid)..":savedlinks")
					return send(msg.chat_id_, msg.id_, "<b>Â„ê«„ ”«“Ì «ÿ·«⁄«  »«  »çÌ ‘„«—Â</b><code> "..tostring(botid).." </code><b>«‰Ã«„ ‘œ.</b>")
				elseif text:match("^(·Ì” ) (.*)$") then
					local matches = text:match("^·Ì”  (.*)$")
					local naji
					if matches == "„Œ«ÿ»Ì‰" then
						return tdcli_function({
							ID = "SearchContacts",
							query_ = nil,
							limit_ = 999999999
						},
						function (I, Naji)
							local count = Naji.total_count_
							local text = "„Œ«ÿ»Ì‰ : \n"
							for i =0 , tonumber(count) - 1 do
								local user = Naji.users_[i]
								local firstname = user.first_name_ or ""
								local lastname = user.last_name_ or ""
								local fullname = firstname .. " " .. lastname
								text = tostring(text) .. tostring(i) .. ". " .. tostring(fullname) .. " [" .. tostring(user.id_) .. "] = " .. tostring(user.phone_number_) .. "  \n"
							end
							writefile("botBOT-ID_contacts.txt", text)
							tdcli_function ({
								ID = "SendMessage",
								chat_id_ = I.chat_id,
								reply_to_message_id_ = 0,
								disable_notification_ = 0,
								from_background_ = 1,
								reply_markup_ = nil,
								input_message_content_ = {ID = "InputMessageDocument",
								document_ = {ID = "InputFileLocal",
								path_ = "botBOT-ID_contacts.txt"},
								caption_ = "„Œ«ÿ»Ì‰  »·Ì€ùê— ‘„«—Â BOT-ID"}
							}, dl_cb, nil)
							return io.popen("rm -rf botBOT-ID_contacts.txt"):read("*all")
						end, {chat_id = msg.chat_id_})
					elseif matches == "Å«”Œ Â«Ì ŒÊœò«—" then
						local text = "<i>·Ì”  Å«”Œ Â«Ì ŒÊœò«— :</i>\n\n"
						local answers = redis:smembers("botBOT-IDanswerslist")
						for k,v in pairs(answers) do
							text = tostring(text) .. "<i>l" .. tostring(k) .. "l</i>  " .. tostring(v) .. " : " .. tostring(redis:hget("botBOT-IDanswers", v)) .. "\n"
						end
						if redis:scard('botBOT-IDanswerslist') == 0  then text = "<code>       EMPTY</code>" end
						return send(msg.chat_id_, msg.id_, text)
					elseif matches == "„”œÊœ" then
						naji = "botBOT-IDblockedusers"
					elseif matches == "‘Œ’Ì" then
						naji = "botBOT-IDusers"
					elseif matches == "ê—ÊÂ" then
						naji = "botBOT-IDgroups"
					elseif matches == "”ÊÅ—ê—ÊÂ" then
						naji = "botBOT-IDsupergroups"
					elseif matches == "·Ì‰ò" then
						naji = "botBOT-IDsavedlinks"
					elseif matches == "„œÌ—" then
						naji = "botBOT-IDadmin"
					else
						return true
					end
					local list =  redis:smembers(naji)
					local text = tostring(matches).." : \n"
					for i, v in pairs(list) do
						text = tostring(text) .. tostring(i) .. "-  " .. tostring(v).."\n"
					end
					writefile(tostring(naji)..".txt", text)
					tdcli_function ({
						ID = "SendMessage",
						chat_id_ = msg.chat_id_,
						reply_to_message_id_ = 0,
						disable_notification_ = 0,
						from_background_ = 1,
						reply_markup_ = nil,
						input_message_content_ = {ID = "InputMessageDocument",
							document_ = {ID = "InputFileLocal",
							path_ = tostring(naji)..".txt"},
						caption_ = "·Ì”  "..tostring(matches).." Â«Ì  »·Ì€ ê— ‘„«—Â BOT-ID"}
					}, dl_cb, nil)
					return io.popen("rm -rf "..tostring(naji)..".txt"):read("*all")
				elseif text:match("^(Ê÷⁄Ì  „‘«ÂœÂ) (.*)$") then
					local matches = text:match("^Ê÷⁄Ì  „‘«ÂœÂ (.*)$")
					if matches == "—Ê‘‰" then
						redis:set("botBOT-IDmarkread", true)
						return send(msg.chat_id_, msg.id_, "<i>Ê÷⁄Ì  ÅÌ«„ Â«  >>  ŒÊ«‰œÂ ‘œÂ ????\n</i><code>( Ìò œÊ„ ›⁄«·)</code>")
					elseif matches == "Œ«„Ê‘" then
						redis:del("botBOT-IDmarkread")
						return send(msg.chat_id_, msg.id_, "<i>Ê÷⁄Ì  ÅÌ«„ Â«  >>  ŒÊ«‰œÂ ‰‘œÂ ??\n</i><code>(»œÊ‰  Ìò œÊ„)</code>")
					end 
				elseif text:match("^(«›“Êœ‰ »« ÅÌ«„) (.*)$") then
					local matches = text:match("^«›“Êœ‰ »« ÅÌ«„ (.*)$")
					if matches == "—Ê‘‰" then
						redis:set("botBOT-IDaddmsg", true)
						return send(msg.chat_id_, msg.id_, "<i>ÅÌ«„ «›“Êœ‰ „Œ«ÿ» ›⁄«· ‘œ</i>")
					elseif matches == "Œ«„Ê‘" then
						redis:del("botBOT-IDaddmsg")
						return send(msg.chat_id_, msg.id_, "<i>ÅÌ«„ «›“Êœ‰ „Œ«ÿ» €Ì—›⁄«· ‘œ</i>")
					end
				elseif text:match("^(«›“Êœ‰ »« ‘„«—Â) (.*)$") then
					local matches = text:match("«›“Êœ‰ »« ‘„«—Â (.*)$")
					if matches == "—Ê‘‰" then
						redis:set("botBOT-IDaddcontact", true)
						return send(msg.chat_id_, msg.id_, "<i>«—”«· ‘„«—Â Â‰ê«„ «›“Êœ‰ „Œ«ÿ» ›⁄«· ‘œ</i>")
					elseif matches == "Œ«„Ê‘" then
						redis:del("botBOT-IDaddcontact")
						return send(msg.chat_id_, msg.id_, "<i>«—”«· ‘„«—Â Â‰ê«„ «›“Êœ‰ „Œ«ÿ» €Ì—›⁄«· ‘œ</i>")
					end
				elseif text:match("^( ‰ŸÌ„ ÅÌ«„ «›“Êœ‰ „Œ«ÿ») (.*)") then
					local matches = text:match("^ ‰ŸÌ„ ÅÌ«„ «›“Êœ‰ „Œ«ÿ» (.*)")
					redis:set("botBOT-IDaddmsgtext", matches)
					return send(msg.chat_id_, msg.id_, "<i>ÅÌ«„ «›“Êœ‰ „Œ«ÿ» À»   ‘œ </i>:\n?? "..matches.." ??")
				elseif text:match('^( ‰ŸÌ„ ÃÊ«») "(.*)" (.*)') then
					local txt, answer = text:match('^ ‰ŸÌ„ ÃÊ«» "(.*)" (.*)')
					redis:hset("botBOT-IDanswers", txt, answer)
					redis:sadd("botBOT-IDanswerslist", txt)
					return send(msg.chat_id_, msg.id_, "<i>ÃÊ«» »—«Ì | </i>" .. tostring(txt) .. "<i> |  ‰ŸÌ„ ‘œ »Â :</i>\n" .. tostring(answer))
				elseif text:match("^(Õ–› ÃÊ«») (.*)") then
					local matches = text:match("^Õ–› ÃÊ«» (.*)")
					redis:hdel("botBOT-IDanswers", matches)
					redis:srem("botBOT-IDanswerslist", matches)
					return send(msg.chat_id_, msg.id_, "<i>ÃÊ«» »—«Ì | </i>" .. tostring(matches) .. "<i> | «“ ·Ì”  ÃÊ«» Â«Ì ŒÊœò«— Å«ò ‘œ.</i>")
				elseif text:match("^(Å«”ŒêÊÌ ŒÊœò«—) (.*)$") then
					local matches = text:match("^Å«”ŒêÊÌ ŒÊœò«— (.*)$")
					if matches == "—Ê‘‰" then
						redis:set("botBOT-IDautoanswer", true)
						return send(msg.chat_id_, 0, "<i>Å«”ŒêÊÌÌ ŒÊœò«—  »·Ì€ ê— ›⁄«· ‘œ</i>")
					elseif matches == "Œ«„Ê‘" then
						redis:del("botBOT-IDautoanswer")
						return send(msg.chat_id_, 0, "<i>Õ«·  Å«”ŒêÊÌÌ ŒÊœò«—  »·Ì€ ê— €Ì— ›⁄«· ‘œ.</i>")
					end
				elseif text:match("^( «“Â ”«“Ì)$")then
					local list = {redis:smembers("botBOT-IDsupergroups"),redis:smembers("botBOT-IDgroups")}
					tdcli_function({
						ID = "SearchContacts",
						query_ = nil,
						limit_ = 999999999
					}, function (i, naji)
						redis:set("botBOT-IDcontacts", naji.total_count_)
					end, nil)
					for i, v in pairs(list) do
							for a, b in pairs(v) do 
								tdcli_function ({
									ID = "GetChatMember",
									chat_id_ = b,
									user_id_ = bot_id
								}, function (i,naji)
									if  naji.ID == "Error" then rem(i.id) 
									end
								end, {id=b})
							end
					end
					return send(msg.chat_id_,msg.id_,"<i> «“Âù”«“Ì ¬„«—  »·Ì€ùê— ‘„«—Â </i><code> BOT-ID </code> »« „Ê›ﬁÌ  «‰Ã«„ ‘œ.")
				elseif text:match("^(Ê÷⁄Ì )$") then
					local s = redis:get("botBOT-IDmaxjoin") and redis:ttl("botBOT-IDmaxjoin") or 0
					local ss = redis:get("botBOT-IDmaxlink") and redis:ttl("botBOT-IDmaxlink") or 0
					local msgadd = redis:get("botBOT-IDaddmsg") and "??" or "?"
					local numadd = redis:get("botBOT-IDaddcontact") and "?" or "?"
					local txtadd = redis:get("botBOT-IDaddmsgtext") or  "«œùœÌ ê·„ Œ’Ê’Ì ÅÌ«„ »œÂ"
					local autoanswer = redis:get("botBOT-IDautoanswer") and "?" or "?"
					local wlinks = redis:scard("botBOT-IDwaitelinks")
					local glinks = redis:scard("botBOT-IDgoodlinks")
					local links = redis:scard("botBOT-IDsavedlinks")
					local txt = "<i>?? Ê÷⁄Ì  «Ã—«ÌÌ  »·Ì€ùê—</i><code> BOT-ID </code>?\n\n" .. tostring(autoanswer) .."<code> Õ«·  Å«”ŒêÊÌÌ ŒÊœò«— ?? </code>\n" .. tostring(numadd) .. "<code> «›“Êœ‰ „Œ«ÿ» »« ‘„«—Â ?? </code>\n" .. tostring(msgadd) .. "<code> «›“Êœ‰ „Œ«ÿ» »« ÅÌ«„ ??</code>\n???«???\n<code>?? ÅÌ«„ «›“Êœ‰ „Œ«ÿ» :</code>\n?? " .. tostring(txtadd) .. " ??\n???«???\n<code>?? ·Ì‰ò Â«Ì –ŒÌ—Â ‘œÂ : </code><b>" .. tostring(links) .. "</b>\n<code>?	·Ì‰ò Â«Ì œ— «‰ Ÿ«— ⁄÷ÊÌ  : </code><b>" .. tostring(glinks) .. "</b>\n??   <b>" .. tostring(s) .. " </b><code>À«‰ÌÂ  « ⁄÷ÊÌ  „Ãœœ</code>\n<code>?? ·Ì‰ò Â«Ì œ— «‰ Ÿ«—  «ÌÌœ : </code><b>" .. tostring(wlinks) .. "</b>\n???   <b>" .. tostring(ss) .. " </b><code>À«‰ÌÂ  «  «ÌÌœ ·Ì‰ò „Ãœœ</code>\n ?? ”«“‰œÂ : @RamtinTz"
					return send(msg.chat_id_, 0, txt)
				elseif text:match("^(«„«—)$") or text:match("^(¬„«—)$") then
					local gps = redis:scard("botBOT-IDgroups")
					local sgps = redis:scard("botBOT-IDsupergroups")
					local usrs = redis:scard("botBOT-IDusers")
					local links = redis:scard("botBOT-IDsavedlinks")
					local glinks = redis:scard("botBOT-IDgoodlinks")
					local wlinks = redis:scard("botBOT-IDwaitelinks")
					tdcli_function({
						ID = "SearchContacts",
						query_ = nil,
						limit_ = 999999999
					}, function (i, naji)
					redis:set("botBOT-IDcontacts", naji.total_count_)
					end, nil)
					local contacts = redis:get("botBOT-IDcontacts")
					local text = [[
<i>?? Ê÷⁄Ì  Ê ¬„«—  »·Ì€ ê— ??</i>
          
<code>?? ê›  Ê êÊ Â«Ì ‘Œ’Ì : </code>
<b>]] .. tostring(usrs) .. [[</b>
<code>?? ê—ÊÂ« : </code>
<b>]] .. tostring(gps) .. [[</b>
<code>?? ”ÊÅ— ê—ÊÂ Â« : </code>
<b>]] .. tostring(sgps) .. [[</b>
<code>?? „Œ«ÿ»Ì‰ œŒÌ—Â ‘œÂ : </code>
<b>]] .. tostring(contacts)..[[</b>
<code>?? ·Ì‰ò Â«Ì –ŒÌ—Â ‘œÂ : </code>
<b>]] .. tostring(links)..[[</b>
 ?? ”«“‰œÂ : @mansour_zv]] </i>")
				elseif text:match("^(„”œÊœÌ ) (%d+)$") then
					local matches = text:match("%d+")
					rem(tonumber(matches))
					redis:sadd("botBOT-IDblockedusers",matches)
					tdcli_function ({
						ID = "BlockUser",
						user_id_ = tonumber(matches)
					}, dl_cb, nil)
					return send(msg.chat_id_, msg.id_, "<i>ò«—»— „Ê—œ ‰Ÿ— „”œÊœ ‘œ</i>")
				elseif text:match("^(—›⁄ „”œÊœÌ ) (%d+)$") then
					local matches = text:match("%d+")
					add(tonumber(matches))
					redis:srem("botBOT-IDblockedusers",matches)
					tdcli_function ({
						ID = "UnblockUser",
						user_id_ = tonumber(matches)
					}, dl_cb, nil)
					return send(msg.chat_id_, msg.id_, "<i>„”œÊœÌ  ò«—»— „Ê—œ ‰Ÿ— —›⁄ ‘œ.</i>")	
				elseif text:match('^( ‰ŸÌ„ ‰«„) "(.*)" (.*)') then
					local fname, lname = text:match('^ ‰ŸÌ„ ‰«„ "(.*)" (.*)')
					tdcli_function ({
						ID = "ChangeName",
						first_name_ = fname,
						last_name_ = lname
					}, dl_cb, nil)
					return send(msg.chat_id_, msg.id_, "<i>‰«„ ÃœÌœ »« „Ê›ﬁÌ  À»  ‘œ.</i>")
				elseif text:match("^( ‰ŸÌ„ ‰«„ ò«—»—Ì) (.*)") then
					local matches = text:match("^ ‰ŸÌ„ ‰«„ ò«—»—Ì (.*)")
						tdcli_function ({
						ID = "ChangeUsername",
						username_ = tostring(matches)
						}, dl_cb, nil)
					return send(msg.chat_id_, 0, '<i> ·«‘ »—«Ì  ‰ŸÌ„ ‰«„ ò«—»—Ì...</i>')
				elseif text:match("^(Õ–› ‰«„ ò«—»—Ì)$") then
					tdcli_function ({
						ID = "ChangeUsername",
						username_ = ""
					}, dl_cb, nil)
					return send(msg.chat_id_, 0, '<i>‰«„ ò«—»—Ì »« „Ê›ﬁÌ  Õ–› ‘œ.</i>')
				elseif text:match('^(«—”«· ò‰) "(.*)" (.*)') then
					local id, txt = text:match('^«—”«· ò‰ "(.*)" (.*)')
					send(id, 0, txt)
					return send(msg.chat_id_, msg.id_, "<i>«—”«· ‘œ</i>")
				elseif text:match("^(»êÊ) (.*)") then
					local matches = text:match("^»êÊ (.*)")
					return send(msg.chat_id_, 0, matches)
				elseif text:match("^(‘‰«”Â „‰)$") then
					return send(msg.chat_id_, msg.id_, "<i>" .. msg.sender_user_id_ .."</i>")
				elseif text:match("^( —ò ò—œ‰) (.*)$") then
					local matches = text:match("^ —ò ò—œ‰ (.*)$") 	
					send(msg.chat_id_, msg.id_, ' »·Ì€ùê— «“ ê—ÊÂ „Ê—œ ‰Ÿ— Œ«—Ã ‘œ')
					tdcli_function ({
						ID = "ChangeChatMemberStatus",
						chat_id_ = matches,
						user_id_ = bot_id,
						status_ = {ID = "ChatMemberStatusLeft"},
					}, dl_cb, nil)
					return rem(matches)
				elseif text:match("^(«›“Êœ‰ »Â Â„Â) (%d+)$") then
					local matches = text:match("%d+")
					local list = {redis:smembers("botBOT-IDgroups"),redis:smembers("botBOT-IDsupergroups")}
					for a, b in pairs(list) do
						for i, v in pairs(b) do 
							tdcli_function ({
								ID = "AddChatMember",
								chat_id_ = v,
								user_id_ = matches,
								forward_limit_ =  50
							}, dl_cb, nil)
						end	
					end
					return send(msg.chat_id_, msg.id_, "<i>ò«—»— „Ê—œ ‰Ÿ— »Â  „«„ ê—ÊÂ Â«Ì „‰ œ⁄Ê  ‘œ</i>")
				elseif (text:match("^(«‰·«Ì‰)$") and not msg.forward_info_)then
					return tdcli_function({
						ID = "ForwardMessages",
						chat_id_ = msg.chat_id_,
						from_chat_id_ = msg.chat_id_,
						message_ids_ = {[0] = msg.id_},
						disable_notification_ = 0,
						from_background_ = 1
					}, dl_cb, nil)
				elseif text:match("^(—«Â‰„«)$") then
					local txt = '??—«Â‰„«Ì œ” Ê—«   »·Ì€ ê—??\n\n«‰·«Ì‰\n<i>«⁄·«„ Ê÷⁄Ì   »·Ì€ ê— ??</i>\n<code>?? Õ Ì «ê—  »·Ì€ùê— ‘„« œç«— „ÕœÊœÌ  «—”«· ÅÌ«„ ‘œÂ »«‘œ »«Ì” Ì »Â «Ì‰ ÅÌ«„ Å«”Œ œÂœ??</code>\n/reload\n<i>l?? »«—ê–«—Ì „Ãœœ —»«  ??l</i>\n<code>I??⁄œ„ «” ›«œÂ »Ì ÃÂ ??I</code>\n»—Ê“—”«‰Ì —»« \n<i>»—Ê“—”«‰Ì —»«  »Â ¬Œ—Ì‰ ‰”ŒÂ Ê »«—ê–«—Ì „Ãœœ ??</i>\n\n«›“Êœ‰ „œÌ— ‘‰«”Â\n<i>«›“Êœ‰ „œÌ— ÃœÌœ »« ‘‰«”Â ⁄œœÌ œ«œÂ ‘œÂ ??</i>\n\n«›“Êœ‰ „œÌ—ò· ‘‰«”Â\n<i>«›“Êœ‰ „œÌ—ò· ÃœÌœ »« ‘‰«”Â ⁄œœÌ œ«œÂ ‘œÂ ??</i>\n\n<code>(??  ›«Ê  „œÌ— Ê „œÌ—ùò· œ” —”Ì »Â «⁄ÿ« Ê Ì« ê—› ‰ „ﬁ«„ „œÌ—Ì  «” ??)</code>\n\nÕ–› „œÌ— ‘‰«”Â\n<i>Õ–› „œÌ— Ì« „œÌ—ò· »« ‘‰«”Â ⁄œœÌ œ«œÂ ‘œÂ ??</i>\n\n —ò ê—ÊÂ\n<i>Œ«—Ã ‘œ‰ «“ ê—ÊÂ Ê Õ–› ¬‰ «“ «ÿ·«⁄«  ê—ÊÂ Â« ??</i>\n\n«›“Êœ‰ Â„Â „Œ«ÿ»Ì‰\n<i>«›“Êœ‰ Õœ«òÀ— „Œ«ÿ»Ì‰ Ê «›—«œ œ— ê›  Ê êÊÂ«Ì ‘Œ’Ì »Â ê—ÊÂ ?</i>\n\n‘‰«”Â „‰\n<i>œ—Ì«›  ‘‰«”Â ŒÊœ ??</i>\n\n»êÊ „ ‰\n<i>œ—Ì«›  „ ‰ ??</i>\n\n«—”«· ò‰ "‘‰«”Â" „ ‰\n<i>«—”«· „ ‰ »Â ‘‰«”Â ê—ÊÂ Ì« ò«—»— œ«œÂ ‘œÂ ??</i>\n\n ‰ŸÌ„ ‰«„ "‰«„" ›«„Ì·\n<i> ‰ŸÌ„ ‰«„ —»«  ??</i>\n\n «“Â ”«“Ì —»« \n<i> «“Âù”«“Ì «ÿ·«⁄«  ›—œÌ —»« ??</i>\n<code>(„Ê—œ «” ›«œÂ œ— „Ê«—œÌ Â„çÊ‰ Å” «“  ‰ŸÌ„ ‰«„??ÃÂ  »—Ê“ò—œ‰ ‰«„ „Œ«ÿ» «‘ —«òÌ  »·Ì€ùê—??)</code>\n\n ‰ŸÌ„ ‰«„ ò«—»—Ì «”„\n<i>Ã«Ìê“Ì‰Ì «”„ »« ‰«„ ò«—»—Ì ›⁄·Ì(„ÕœÊœ œ— »«“Â “„«‰Ì òÊ «Â) ??</i>\n\nÕ–› ‰«„ ò«—»—Ì\n<i>Õ–› ò—œ‰ ‰«„ ò«—»—Ì ?</i>\n\n«›“Êœ‰ »« ‘„«—Â —Ê‘‰|Œ«„Ê‘\n<i> €ÌÌ— Ê÷⁄Ì  «‘ —«ò ‘„«—Â  »·Ì€ùê— œ— ÃÊ«» ‘„«—Â »Â «‘ —«ò ê–«‘ Â ‘œÂ ??</i>\n\n«›“Êœ‰ »« ÅÌ«„ —Ê‘‰|Œ«„Ê‘\n<i> €ÌÌ— Ê÷⁄Ì  «—”«· ÅÌ«„ œ— ÃÊ«» ‘„«—Â »Â «‘ —«ò ê–«‘ Â ‘œÂ ??</i>\n\n ‰ŸÌ„ ÅÌ«„ «›“Êœ‰ „Œ«ÿ» „ ‰\n<i> ‰ŸÌ„ „ ‰ œ«œÂ ‘œÂ »Â ⁄‰Ê«‰ ÃÊ«» ‘„«—Â »Â «‘ —«ò ê–«‘ Â ‘œÂ ??</i>\n\n·Ì”  „Œ«ÿ»Ì‰|Œ’Ê’Ì|ê—ÊÂ|”ÊÅ—ê—ÊÂ|Å«”Œ Â«Ì ŒÊœò«—|·Ì‰ò|„œÌ—\n<i>œ—Ì«›  ·Ì” Ì «“ „Ê—œ ŒÊ«” Â ‘œÂ œ— ﬁ«·» Å—Ê‰œÂ „ ‰Ì Ì« ÅÌ«„ ??</i>\n\n„”œÊœÌ  ‘‰«”Â\n<i>„”œÊœùò—œ‰(»·«ò) ò«—»— »« ‘‰«”Â œ«œÂ ‘œÂ «“ ê›  Ê êÊÌ Œ’Ê’Ì ??</i>\n\n—›⁄ „”œÊœÌ  ‘‰«”Â\n<i>—›⁄ „”œÊœÌ  ò«—»— »« ‘‰«”Â œ«œÂ ‘œÂ ??</i>\n\nÊ÷⁄Ì  „‘«ÂœÂ —Ê‘‰|Œ«„Ê‘ ??\n<i> €ÌÌ— Ê÷⁄Ì  „‘«ÂœÂ ÅÌ«„ùÂ«  Ê”ÿ  »·Ì€ùê— (›⁄«· Ê €Ì—ù›⁄«·ùò—œ‰  Ìò œÊ„)</i>\n\n«„«—\n<i>œ—Ì«›  ¬„«— Ê Ê÷⁄Ì   »·Ì€ ê— ??</i>\n\nÊ÷⁄Ì \n<i>œ—Ì«›  Ê÷⁄Ì  «Ã—«ÌÌ  »·Ì€ùê—??</i>\n\n «“Â ”«“Ì\n<i> «“Âù”«“Ì ¬„«—  »·Ì€ùê—??</i>\n<code>??„Ê—œ «” ›«œÂ Õœ«òÀ— Ìò »«— œ— —Ê“??</code>\n\n«—”«· »Â Â„Â|Œ’Ê’Ì|ê—ÊÂ|”ÊÅ—ê—ÊÂ\n<i>«—”«· ÅÌ«„ ÃÊ«» œ«œÂ ‘œÂ »Â „Ê—œ ŒÊ«” Â ‘œÂ ??</i>\n<code>(?? Ê’ÌÂ „« ⁄œ„ «” ›«œÂ «“ Â„Â Ê Œ’Ê’Ì??)</code>\n\n«—”«· »Â ”ÊÅ—ê—ÊÂ „ ‰\n<i>«—”«· „ ‰ œ«œÂ ‘œÂ »Â Â„Â ”ÊÅ—ê—ÊÂ Â« ??</i>\n<code>(?? Ê’ÌÂ „« «” ›«œÂ Ê «œ€«„ œ” Ê—«  »êÊ Ê «—”«· »Â ”ÊÅ—ê—ÊÂ??)</code>\n\n ‰ŸÌ„ ÃÊ«» "„ ‰" ÃÊ«»\n<i> ‰ŸÌ„ ÃÊ«»Ì »Â ⁄‰Ê«‰ Å«”Œ ŒÊœò«— »Â ÅÌ«„ Ê«—œ ‘œÂ „ÿ«»ﬁ »« „ ‰ »«‘œ ??</i>\n\nÕ–› ÃÊ«» „ ‰\n<i>Õ–› ÃÊ«» „—»Êÿ »Â „ ‰ ??</i>\n\nÅ«”ŒêÊÌ ŒÊœò«— —Ê‘‰|Œ«„Ê‘\n<i> €ÌÌ— Ê÷⁄Ì  Å«”ŒêÊÌÌ ŒÊœò«—  »·Ì€ ê— »Â „ ‰ Â«Ì  ‰ŸÌ„ ‘œÂ ??</i>\n\n«›“Êœ‰ »Â Â„Â ‘‰«”Â\n<i>«›“Êœ‰ ò«»— »« ‘‰«”Â Ê«—œ ‘œÂ »Â Â„Â ê—ÊÂ Ê ”ÊÅ—ê—ÊÂ Â« ??</i>\n\n —ò ò—œ‰ ‘‰«”Â\n<i>⁄„·Ì«   —ò ò—œ‰ »« «” ›«œÂ «“ ‘‰«”Â ê—ÊÂ ??</i>\n\n—«Â‰„«\n<i>œ—Ì«›  Â„Ì‰ ÅÌ«„ ??</i>\n???«???\nÂ„ê«„ ”«“Ì »«  »çÌ\n<code>Â„ê«„ ”«“Ì «ÿ·«⁄«   »·Ì€ ê— »« «ÿ·«⁄«   »çÌ «“ ﬁ»· ‰’» ‘œÂ ?? (ÃÂ  «Ì‰ «„— Õ „« »Â ÊÌœÌÊ ¬„Ê“‘Ì ò«‰«· „—«Ã⁄Â ò‰Ìœ)</code>\n???«???\n”«“‰œÂ : @mansour_zv \nò«‰«· : @tabchi59\n<i>¬œ—” ”Ê—”  »·Ì€ ê— (ò«„·« ›«—”Ì) :</i>\nhttps://github.com/ramtintz/tabchi/\n<code>¬Œ—Ì‰ «Œ»«— Ê —ÊÌœ«œ Â«Ì  »·Ì€ ê— —« œ— ò«‰«· „« ÅÌêÌ—Ì ò‰Ìœ.</code>'
					return send(msg.chat_id_,msg.id_, txt)
				elseif tostring(msg.chat_id_):match("^-") then
					if text:match("^( —ò ò—œ‰)$") then
						rem(msg.chat_id_)
						return tdcli_function ({
							ID = "ChangeChatMemberStatus",
							chat_id_ = msg.chat_id_,
							user_id_ = bot_id,
							status_ = {ID = "ChatMemberStatusLeft"},
						}, dl_cb, nil)
					elseif text:match("^(«›“Êœ‰ Â„Â „Œ«ÿ»Ì‰)$") then
						tdcli_function({
							ID = "SearchContacts",
							query_ = nil,
							limit_ = 999999999
						},function(i, naji)
							local users, count = redis:smembers("botBOT-IDusers"), naji.total_count_
							for n=0, tonumber(count) - 1 do
								tdcli_function ({
									ID = "AddChatMember",
									chat_id_ = i.chat_id,
									user_id_ = naji.users_[n].id_,
									forward_limit_ = 50
								},  dl_cb, nil)
							end
							for n=1, #users do
								tdcli_function ({
									ID = "AddChatMember",
									chat_id_ = i.chat_id,
									user_id_ = users[n],
									forward_limit_ = 50
								},  dl_cb, nil)
							end
						end, {chat_id=msg.chat_id_})
						return send(msg.chat_id_, msg.id_, "<i>œ— Õ«· «›“Êœ‰ „Œ«ÿ»Ì‰ »Â ê—ÊÂ ...</i>")
					end
				end
			end
			if redis:sismember("botBOT-IDanswerslist", text) then
				if redis:get("botBOT-IDautoanswer") then
					if msg.sender_user_id_ ~= bot_id then
						local answer = redis:hget("botBOT-IDanswers", text)
						send(msg.chat_id_, 0, answer)
					end
				end
			end
		elseif msg.content_.ID == "MessageContact" then
			local id = msg.content_.contact_.user_id_
			if not redis:sismember("botBOT-IDaddedcontacts",id) then
				redis:sadd("botBOT-IDaddedcontacts",id)
				local first = msg.content_.contact_.first_name_ or "-"
				local last = msg.content_.contact_.last_name_ or "-"
				local phone = msg.content_.contact_.phone_number_
				local id = msg.content_.contact_.user_id_
				tdcli_function ({
					ID = "ImportContacts",
					contacts_ = {[0] = {
							phone_number_ = tostring(phone),
							first_name_ = tostring(first),
							last_name_ = tostring(last),
							user_id_ = id
						},
					},
				}, dl_cb, nil)
				if redis:get("botBOT-IDaddcontact") and msg.sender_user_id_ ~= bot_id then
					local fname = redis:get("botBOT-IDfname")
					local lnasme = redis:get("botBOT-IDlname") or ""
					local num = redis:get("botBOT-IDnum")
					tdcli_function ({
						ID = "SendMessage",
						chat_id_ = msg.chat_id_,
						reply_to_message_id_ = msg.id_,
						disable_notification_ = 1,
						from_background_ = 1,
						reply_markup_ = nil,
						input_message_content_ = {
							ID = "InputMessageContact",
							contact_ = {
								ID = "Contact",
								phone_number_ = num,
								first_name_ = fname,
								last_name_ = lname,
								user_id_ = bot_id
							},
						},
					}, dl_cb, nil)
				end
			end
			if redis:get("botBOT-IDaddmsg") then
				local answer = redis:get("botBOT-IDaddmsgtext") or "«œœÌ ê·„ Œ’Ê’Ì ÅÌ«„ »œÂ"
				send(msg.chat_id_, msg.id_, answer)
			end
		elseif msg.content_.ID == "MessageChatDeleteMember" and msg.content_.id_ == bot_id then
			return rem(msg.chat_id_)
		elseif msg.content_.ID == "MessageChatJoinByLink" and msg.sender_user_id_ == bot_id then
			return add(msg.chat_id_)
		elseif msg.content_.ID == "MessageChatAddMembers" then
			for i = 0, #msg.content_.members_ do
				if msg.content_.members_[i].id_ == bot_id then
					add(msg.chat_id_)
				end
			end
		elseif msg.content_.caption_ then
			return find_link(msg.content_.caption_)
		end
		if redis:get("botBOT-IDmarkread") then
			tdcli_function ({
				ID = "ViewMessages",
				chat_id_ = msg.chat_id_,
				message_ids_ = {[0] = msg.id_} 
			}, dl_cb, nil)
		end
	elseif data.ID == "UpdateOption" and data.name_ == "my_id" then
		tdcli_function ({
			ID = "GetChats",
			offset_order_ = 9223372036854775807,
			offset_chat_id_ = 0,
			limit_ = 20
		}, dl_cb, nil)
	end
end